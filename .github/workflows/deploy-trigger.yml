name: Deploy to Elastic Beanstalk

on:
  push:
    branches: [ main ]

jobs:
  trigger-app:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set AWS Account ID
        id: aws_account
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli -y

      - name: Trigger Elastic Beanstalk Deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'  # Change this to your region
          APPLICATION_NAME: 'volley'  # Replace with your Elastic Beanstalk application name
          ENVIRONMENT_NAME: 'volley-dev2'  # Replace with your Elastic Beanstalk environment name
          DEPLOY_ID: ${{ github.sha }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}  # Set from previous step
        run: |
          echo "Zipping application..."
          zip -r application.zip .

          echo "Uploading to S3..."
          aws s3 cp application.zip s3://elasticbeanstalk-$AWS_REGION-$AWS_ACCOUNT_ID/application.zip

          echo "Creating new Elastic Beanstalk application version..."
          aws elasticbeanstalk create-application-version \
            --application-name $APPLICATION_NAME \
            --version-label $DEPLOY_ID \
            --source-bundle S3Bucket=elasticbeanstalk-$AWS_REGION-$AWS_ACCOUNT_ID,S3Key=application.zip

          echo "Updating Elastic Beanstalk environment..."
          aws elasticbeanstalk update-environment \
            --environment-name $ENVIRONMENT_NAME \
            --version-label $DEPLOY_ID

      - name: Notify Completion
        run: echo "Elastic Beanstalk Deployment triggered!"
